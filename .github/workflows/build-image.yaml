name: reuseable-workflow
env:
  AWS_REGION: us-east-2
on:
  workflow_call:
    inputs:
      BUILD_IMAGE:
        required: true
        type: string
      BUILD_ARGS:
        required: false
        type: string
      ENVIRONMENT:
        required: true
        type: string
      SERVICE_NAME:
        required: true
        type: string
      BRANCH:
        required: true
        type: string


    outputs:
      ECR_IMAGE:
          description: "Ecr Image"
          value: ${{ jobs.build_image.outputs.image }}
  

jobs:
  reusable_workflow_job:
    runs-on: ubuntu-latest
    

    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_EXPERIMENTAL }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY_EXPERIMENTAL }}
          aws-region: us-east-2

      - name: Login to Amazon ECR
        if: ${{ inputs.BUILD_IMAGE== 'yes' }}
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        if: ${{ inputs.BUILD_IMAGE== 'yes' }}
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY_PREFIX: "bundle"
          GITHUB_OWNER: bundle-app
          ECR_REPOSITORY: ${{ inputs.SERVICE_NAME }} #Replace this with your service name eg. blockchain-service
          ENVIRONMENT: ${{ inputs.ENVIRONMENT }}
          GITHUB_TOKEN: ${{secrets.GLOBAL_GITHUB_TOKEN}}
          ENV_SECRETS: ${{inputs.ENV_SECRETS}}
    

        run: |
          # Build a docker container and push it to ECR

          git_hash=$(git rev-parse --short "$GITHUB_SHA")
          tag=$ECR_REGISTRY/$ECR_REPOSITORY_PREFIX/$ECR_REPOSITORY/$ENVIRONMENT:${GITHUB_REF##*/}-$git_hash
          echo "Building $tag"
          docker build --build-arg GITHUB_TOKEN --build-arg GITHUB_PACKAGE_REPO --build-arg GITHUB_OWNER -t $tag .
          echo "Pushing image to ECR..."
          docker push $tag
          echo "::set-output name=image::$tag"

      - name: Update Version
        if: ${{ inputs.BUILD_IMAGE == 'yes' }}
        run: |
            git_hash=$(git rev-parse --short "$GITHUB_SHA")
            version=$(cat ./charts/deploy/values.yaml | grep version: | awk '{print $2}')
            sed -i "s/$version/${GITHUB_REF##*/}-$git_hash/" ./charts/deploy/values.yaml


      - name: write
        uses: Bundle-App/publish-to-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GLOBAL_GITHUB_TOKEN }}
          BRANCH_NAME: ${{inputs.BRANCH}} #optional defaults to master

